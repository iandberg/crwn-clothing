{"version":3,"sources":["components/checkout-item/checkout-item.component.jsx","components/stripe-button/stripe-button.component.jsx","pages/checkout/checkout.component.jsx"],"names":["connect","dispatch","clearItemFromCart","item","addItem","removeItem","cartItem","name","imageUrl","price","quantity","className","src","alt","onClick","StripeCheckoutButton","priceForStripe","label","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","url","method","data","then","response","alert","catch","error","console","log","JSON","parse","stripeKey","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","map","key","id"],"mappings":"kOAkCeA,cAAQ,MANI,SAAAC,GAAQ,MAAI,CACtCC,kBAAoB,SAAAC,GAAI,OAAIF,EAASC,YAAkBC,KACvDC,QAAU,SAAAD,GAAI,OAAIF,EAASG,YAAQD,KACnCE,WAAa,SAAAF,GAAI,OAAIF,EAASI,YAAWF,QAG3BH,EA3BM,SAAC,GAAwD,IAAvDM,EAAsD,EAAtDA,SAAUF,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,WAAYH,EAAuB,EAAvBA,kBAE9CK,EAAmCD,EAAnCC,KAAMC,EAA6BF,EAA7BE,SAAUC,EAAmBH,EAAnBG,MAAOC,EAAYJ,EAAZI,SAE9B,OACC,yBAAKC,UAAU,iBACd,yBAAKA,UAAU,mBACd,yBAAKC,IAAKJ,EAAUK,IAAI,UAEzB,0BAAMF,UAAU,QAAQJ,GACxB,0BAAMI,UAAU,YACf,4BAAQA,UAAU,QAAQG,QAAS,kBAAIT,EAAWC,KAAlD,UACA,yBAAKK,UAAU,QAAQD,GACvB,4BAAQC,UAAU,QAAQG,QAAS,kBAAIV,EAAQE,KAA/C,WAED,0BAAMK,UAAU,SAASF,GACzB,4BAAQE,UAAU,gBAAgBG,QAAS,kBAAIZ,EAAkBI,KAAjE,c,oCCoBYS,EAvCc,SAAC,GAAa,IAAZN,EAAW,EAAXA,MACxBO,EAAyB,IAARP,EAqBvB,OACC,kBAAC,IAAD,CACCQ,MAAM,UACNV,KAAK,qBACLW,gBAAc,EACdC,iBAAe,EACfC,MAAM,iCACNC,YAAW,yBAAoBZ,GAC/Ba,OAAQN,EACRO,WAAW,UACXC,MA5Bc,SAAAA,GACfC,IAAM,CACLC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACLN,OAAQN,EACRQ,WAGAK,MAAK,SAAAC,GACLC,MAAM,wBAENC,OAAM,SAAAC,GACNC,QAAQC,IAAI,kBAAmBC,KAAKC,MAAMJ,IAC1CF,MAAM,0FAePO,UA/BqB,gD,QC2ClBC,G,OAAkBC,YAAyB,CAChDC,UAAYC,IACZC,MAAQC,OAGM5C,sBAAQuC,EAARvC,EAtCM,SAAC,GAAwB,IAAvByC,EAAsB,EAAtBA,UAAWE,EAAW,EAAXA,MACjC,OACC,yBAAKhC,UAAU,iBACd,yBAAKA,UAAU,mBACd,yBAAKA,UAAU,gBACb,0CAEF,yBAAKA,UAAU,gBACb,2CAEF,yBAAKA,UAAU,gBACb,wCAEF,yBAAKA,UAAU,gBACb,0CAID8B,EAAUI,KAAI,SAAAvC,GAAQ,OAAI,kBAAC,EAAD,CAAcwC,IAAKxC,EAASyC,GAAIzC,SAAUA,OAErE,yBAAKK,UAAU,SAAf,WAAgCgC,GAEhC,yBAAKhC,UAAU,gBAAf,0DAEC,6BAFD,8CAMA,kBAAC,EAAD,CAAsBF,MAAOkC","file":"static/js/8.2911ffb1.chunk.js","sourcesContent":["import React from 'react'\n\nimport './checkout-item.styles.scss'\nimport { connect } from 'react-redux'\n\nimport { clearItemFromCart, addItem, removeItem } from '../../redux/cart/cart.actions'\n\nconst CheckoutItem = ({cartItem, addItem, removeItem, clearItemFromCart}) => {\n\n\tconst {name, imageUrl, price, quantity} = cartItem;\n\n\treturn (\n\t\t<div className=\"checkout-item\">\n\t\t\t<div className=\"image-container\">\n\t\t\t\t<img src={imageUrl} alt=\"item\" />\n\t\t\t</div>\n\t\t\t<span className=\"name\">{name}</span>\n\t\t\t<span className=\"quantity\">\n\t\t\t\t<button className=\"arrow\" onClick={()=>removeItem(cartItem)}>&#10094;</button>\n\t\t\t\t<div className=\"name\">{quantity}</div>\n\t\t\t\t<button className=\"arrow\" onClick={()=>addItem(cartItem)}>&#10095;</button>\n\t\t\t</span>\n\t\t\t<span className=\"price\">{price}</span>\n\t\t\t<button className=\"remove-button\" onClick={()=>clearItemFromCart(cartItem)}>&#10005;</button>\n\t\t</div>\n\t)\n}\n\nconst mapDispatchToProps = dispatch =>({\n\tclearItemFromCart : item => dispatch(clearItemFromCart(item)),\n\taddItem : item => dispatch(addItem(item)),\n\tremoveItem : item => dispatch(removeItem(item))\n})\n\nexport default connect(null, mapDispatchToProps)(CheckoutItem)\n","import React from 'react'\nimport StripeCheckout from 'react-stripe-checkout'\nimport axios from 'axios'\n\nconst StripeCheckoutButton = ({price}) => {\n\tconst priceForStripe = price * 100\n\tconst publishableKey = 'pk_test_T9lg4uQE1xSngBwPE3pZeivG00sSb3vdtE'\n\n\tconst onToken = token => {\n\t\taxios({\n\t\t\turl: 'payment',\n\t\t\tmethod: 'post',\n\t\t\tdata: {\n\t\t\t\tamount: priceForStripe,\n\t\t\t\ttoken\n\t\t\t}\n\t\t})\n\t\t\t.then(response => {\n\t\t\t\talert('Payment Succesful')\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log('Payment error: ', JSON.parse(error));\n\t\t\t\talert('There was an issue with your payment. Please be sure you use the correct CC number');\n\t\t\t})\n\t}\n\n\treturn(\n\t\t<StripeCheckout\n\t\t\tlabel='Pay Now'\n\t\t\tname='Crwn Clothing Ltd.'\n\t\t\tbillingAddress\n\t\t\tshippingAddress\n\t\t\timage='https://svgshare.com/i/CUz.svg'\n\t\t\tdescription={`Your total is $${price}`}\n\t\t\tamount={priceForStripe}\n\t\t\tpanelLabel='Pay Now'\n\t\t\ttoken={onToken}\n\t\t\tstripeKey={publishableKey}\n\t\t/>\n\t)\n}\n\n\nexport default StripeCheckoutButton\n","import React from 'react'\n\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\n// pages/components\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component'\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button.component'\n\n// selectors\nimport { selectCartItems } from '../../redux/cart/cart.selectors'\nimport { selectCartTotal } from '../../redux/cart/cart.selectors'\n\n// styles\nimport './checkout.styles.scss'\n\nconst CheckoutPage = ({cartItems, total}) => {\n\treturn(\n\t\t<div className=\"checkout-page\">\n\t\t\t<div className=\"checkout-header\">\n\t\t\t\t<div className=\"header-block\">\n\t\t\t\t\t\t<span>Product</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"header-block\">\n\t\t\t\t\t\t<span>Quantity</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"header-block\">\n\t\t\t\t\t\t<span>Price</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"header-block\">\n\t\t\t\t\t\t<span>Remove</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\t{\n\t\t\t\t\tcartItems.map(cartItem => <CheckoutItem key={cartItem.id} cartItem={cartItem} /> )\n\t\t\t\t}\n\t\t\t\t<div className=\"total\">Total: ${total}</div>\n\n\t\t\t\t<div className=\"test-warning\">\n\t\t\t\t\t\t*Please us the following test credit card for payments*\n\t\t\t\t\t<br/>\n\t\t\t\t\t4242 4242 4242 4242 - exp: 01/20 - cc: 123\n\t\t\t\t</div>\n\n\t\t\t\t<StripeCheckoutButton price={total} />\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = createStructuredSelector({\n\tcartItems : selectCartItems,\n\ttotal : selectCartTotal\n})\n\nexport default connect(mapStateToProps)(CheckoutPage)\n"],"sourceRoot":""}