{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], // convert to array of objects so we can map them to collection previews\ncollections => collections ? Object.keys(collections).map(key => collections[key]) : []); // here we are returning a createSelector function that then takes state\n\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null);\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching);","map":{"version":3,"sources":["/Users/iandahlberg/Documents/code/react learn/crwn-clothing/src/redux/shop/shop.selectors.jsx"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC9C,CAACC,UAAD,CAD8C,EAE9CE,IAAI,IAAIA,IAAI,CAACE,WAFiC,CAAxC;AAKP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACxD,CAACI,iBAAD,CADwD,EAExD;AACAC,WAAW,IAAIA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAH,GAA2D,EAH7B,CAAlD,C,CAMP;;AACA,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IACjDZ,cAAc,CACb,CAACI,iBAAD,CADa,EAEbC,WAAW,IAAIA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IAFlD,CADR;AAOP,OAAO,MAAMC,0BAA0B,GAAGb,cAAc,CACvD,CAACC,UAAD,CADuD,EAEvDE,IAAI,IAAIA,IAAI,CAACW,UAF0C,CAAjD","sourcesContent":["import { createSelector } from 'reselect'\n\nconst selectShop = state => state.shop\n\nexport const selectCollections = createSelector(\n\t[selectShop],\n\tshop => shop.collections\n)\n\nexport const selectCollectionsForPreview = createSelector(\n\t[selectCollections],\n\t// convert to array of objects so we can map them to collection previews\n\tcollections => collections ? Object.keys(collections).map(key => collections[key]) : []\n)\n\n// here we are returning a createSelector function that then takes state\nexport const selectCollection = collectionUrlParam => (\n\tcreateSelector(\n\t\t[selectCollections],\n\t\tcollections => collections ? collections[collectionUrlParam] : null\n\t)\n)\n\nexport const selectIsCollectionFetching = createSelector(\n\t[selectShop],\n\tshop => shop.isFetching\n)\n"]},"metadata":{},"sourceType":"module"}