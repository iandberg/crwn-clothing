{"ast":null,"code":"var _jsxFileName = \"/Users/iandahlberg/Documents/code/react learn/crwn-clothing/src/components/cart-icon/cart-icon.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { selectCartItemsCount } from '../../redux/cart/cart.selectors';\nimport { ReactComponent as ShoppingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/shopping-bag.svg\";\nimport './cart-icon.styles.scss';\n\nconst CartIcon = ({\n  toggleCartHidden,\n  cartItems\n}) => {\n  return React.createElement(\"button\", {\n    className: \"cart-icon\",\n    onClick: toggleCartHidden,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(ShoppingIcon, {\n    className: \"shopping-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"item-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, cartItems));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nconst mapStateToProps = state => {\n  // because the state changes, the cart reducer is called and this cartItems changes, but we don't want to rerender if the item total is the same\n  // we use a selector for memoization\n  return {\n    cartItems: selectCartItemsCount(state)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);","map":{"version":3,"sources":["/Users/iandahlberg/Documents/code/react learn/crwn-clothing/src/components/cart-icon/cart-icon.component.jsx"],"names":["React","connect","toggleCartHidden","selectCartItemsCount","CartIcon","cartItems","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,oBAAT,QAAqC,iCAArC;;AAIA,OAAO,yBAAP;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACF,EAAAA,gBAAD;AAAmBG,EAAAA;AAAnB,CAAD,KAAmC;AAEnD,SACA;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,OAAO,EAAEH,gBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BG,SAA9B,CAFD,CADA;AAMA,CARD;;AAUA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACvCL,EAAAA,gBAAgB,EAAE,MAAMK,QAAQ,CAACL,gBAAgB,EAAjB;AADO,CAAL,CAAnC;;AAIA,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAChC;AACA;AACA,SAAQ;AACPJ,IAAAA,SAAS,EAAGF,oBAAoB,CAACM,KAAD;AADzB,GAAR;AAIA,CAPD;;AASA,eAAeR,OAAO,CAACO,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CF,QAA7C,CAAf","sourcesContent":["import React from 'react'\n\nimport { connect } from 'react-redux'\n\nimport { toggleCartHidden } from '../../redux/cart/cart.actions'\nimport { selectCartItemsCount } from '../../redux/cart/cart.selectors'\n\nimport { ReactComponent as ShoppingIcon } from '../../assets/shopping-bag.svg'\n\nimport './cart-icon.styles.scss'\n\nconst CartIcon = ({toggleCartHidden, cartItems}) => {\n\n\treturn (\n\t<button className=\"cart-icon\" onClick={toggleCartHidden}>\n\t\t<ShoppingIcon className=\"shopping-icon\" />\n\t\t<span className=\"item-count\">{cartItems}</span>\n\t</button>\n\t)\n}\n\nconst mapDispatchToProps = dispatch => ({\n\ttoggleCartHidden: () => dispatch(toggleCartHidden())\n})\n\nconst mapStateToProps = state => {\n\t// because the state changes, the cart reducer is called and this cartItems changes, but we don't want to rerender if the item total is the same\n\t// we use a selector for memoization\n\treturn ({\n\t\tcartItems : selectCartItemsCount(state)\n\t})\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon)\n"]},"metadata":{},"sourceType":"module"}