{"ast":null,"code":"var _jsxFileName = \"/Users/iandahlberg/Documents/code/react learn/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux'; // pages/components\n\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'; //hocs\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'; // actions\n\nimport { updateCollections } from '../../redux/shop/shop.actions'; // =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections'); // this will get us snapshot of collections obj\n\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromSnapshot();\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPage, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/iandahlberg/Documents/code/react learn/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","WithSpinner","updateCollections","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","componentWillUnmount","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,sDAAxB,C,CAEA;;AACA,SAASC,iBAAT,QAAkC,+BAAlC,C,CAEA;;AAEA,MAAMC,8BAA8B,GAAGF,WAAW,CAACJ,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGH,WAAW,CAACH,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAGrCC,KAHqC,GAG7B;AACPC,MAAAA,OAAO,EAAE;AADF,KAH6B;AAAA,SAOrCC,uBAPqC,GAOX,IAPW;AAAA;;AASrCC,EAAAA,iBAAiB,GAAE;AAAA,UAEVR,iBAFU,GAEY,KAAKS,KAFjB,CAEVT,iBAFU;AAGlB,UAAMU,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB,CAHkB,CAKlB;;AACA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAiB;AACxE,YAAMC,cAAc,GAAGhB,+BAA+B,CAACe,QAAD,CAAtD;AACAb,MAAAA,iBAAiB,CAACc,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,KAJ8B,CAA/B;AAKA;;AAEDU,EAAAA,oBAAoB,GAAE;AACrB,SAAKT,uBAAL;AACA;;AAEDU,EAAAA,MAAM,GAAE;AAAA,UAEAC,KAFA,GAES,KAAKT,KAFd,CAEAS,KAFA;AAAA,UAGAZ,OAHA,GAGW,KAAKD,KAHhB,CAGAC,OAHA;AAKP,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKY,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,MAAM,EAAEV,KAAK,IAAI,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKS,KAAK,CAACC,IAAX,mBAAX;AAA4C,MAAA,MAAM,EAAEV,KAAK,IAAI,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAEH;AAA3B,SAAwCG,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD;AAMA;;AArCoC;;AAwCtC,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACvCrB,EAAAA,iBAAiB,EAAEc,cAAc,IAAIO,QAAQ,CAACrB,iBAAiB,CAACc,cAAD,CAAlB;AADN,CAAL,CAAnC;;AAIA,eAAepB,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from \"react\"\nimport { Route } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\n\n// pages/components\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\"\nimport CollectionPage from \"../collection/collection.component\"\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\n//hocs\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\n// actions\nimport { updateCollections } from '../../redux/shop/shop.actions'\n\n// =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage extends React.Component{\n\n\t// no need for constructor or super()\n\tstate = {\n\t\tloading: true\n\t}\n\n\tunsubscribeFromSnapshot = null\n\n\tcomponentDidMount(){\n\n\t\tconst { updateCollections } = this.props\n\t\tconst collectionRef = firestore.collection('collections')\n\n\t\t// this will get us snapshot of collections obj\n\t\tthis.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot =>{\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n\t\t\tupdateCollections(collectionsMap)\n\t\t\tthis.setState({ loading: false })\n\t\t})\n\t}\n\n\tcomponentWillUnmount(){\n\t\tthis.unsubscribeFromSnapshot()\n\t}\n\n\trender(){\n\n\t\tconst {match} = this.props\n\t\tconst {loading} = this.state\n\n\t\treturn(\n\t\t\t<div className=\"shop-page\">\n\t\t\t\t<Route exact path={`${match.path}`} render={props => <CollectionsOverviewWithSpinner isLoading={loading} {...props} />} />\n\t\t\t\t<Route path={`${match.path}/:collectionId`} render={props => <CollectionPage isLoading={loading} {...props} />} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tupdateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage)\n"]},"metadata":{},"sourceType":"module"}