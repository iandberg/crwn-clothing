{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n}); // thunk in action: we return a function that will be invoked with dispatch as 1st arg\n// we can then dispatch multiple actions within\n\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    console.log('invoked');\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/iandahlberg/Documents/code/react learn/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","console","log","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC3CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADqB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACzDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADmC;AAEzDC,EAAAA,OAAO,EAAEF;AAFgD,CAAL,CAA9C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACvDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADiC;AAEvDH,EAAAA,OAAO,EAAEE;AAF8C,CAAL,CAA5C,C,CAKP;AACA;;AACA,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC/C,SAAOC,QAAQ,IAAI;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,UAAMC,aAAa,GAAGhB,SAAS,CAACiB,UAAV,CAAqB,aAArB,CAAtB;AACAJ,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAc,IAAAA,aAAa,CACXE,GADF,GAEEC,IAFF,CAEOC,QAAQ,IAAG;AAChB,YAAMd,cAAc,GAAGL,+BAA+B,CAACmB,QAAD,CAAtD;AACAP,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACA,KALF,EAMEe,KANF,CAMQC,KAAK,IAAIT,QAAQ,CAACJ,uBAAuB,CAACa,KAAK,CAACC,OAAP,CAAxB,CANzB;AAOA,GAZD;AAaA,CAdM","sourcesContent":["import ShopActionTypes from './shop.types'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nexport const fetchCollectionsStart = () => ({\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_START\n})\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n\tpayload: collectionsMap\n})\n\nexport const fetchCollectionsFailure = errorMessage => ({\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n\tpayload: errorMessage\n})\n\n// thunk in action: we return a function that will be invoked with dispatch as 1st arg\n// we can then dispatch multiple actions within\nexport const fetchCollectionsStartAsync = () => {\n\treturn dispatch => {\n\t\tconsole.log('invoked');\n\t\tconst collectionRef = firestore.collection('collections')\n\t\tdispatch(fetchCollectionsStart())\n\n\t\tcollectionRef\n\t\t\t.get()\n\t\t\t.then(snapshot =>{\n\t\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n\t\t\t\tdispatch(fetchCollectionsSuccess(collectionsMap))\n\t\t\t})\n\t\t\t.catch(error => dispatch(fetchCollectionsFailure(error.message)))\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}