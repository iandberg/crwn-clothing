{"ast":null,"code":"var _jsxFileName = \"/Users/iandahlberg/Documents/code/react learn/crwn-clothing/client/src/App.js\";\nimport React, { useEffect, lazy, Suspense } from 'react';\nimport { Route, Switch, Redirect } from \"react-router-dom\"; // redirect to prevent signed in user from the sign in page\n\nimport { connect } from 'react-redux'; // ===================== Reselect =====================\n\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { checkUserSession } from './redux/user/user.actions';\nimport Header from './components/header/header.component';\nimport { GlobalStyle } from './global.styles';\nimport Spinner from './components/spinner/spinner.component';\nimport ErrorBoundary from './components/error-boundary/error-boundary.component';\nconst Homepage = lazy(() => import('./pages/homepage/homepage.component'));\nconst ShopPage = lazy(() => import('./pages/shop/shop.component'));\nconst CheckoutPage = lazy(() => import('./pages/checkout/checkout.component'));\nconst SignInAndSignUp = lazy(() => import('./pages/sign-in-sign-up/sign-in-sign-up.component'));\n\nconst App = ({\n  checkUserSession,\n  currentUser\n}) => {\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]); //only invoke useEffect if checkUserSession changes, which it won't - this just mimics componentDidMount, a dummy property, just to satisfy the empty array \n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(GlobalStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(ErrorBoundary, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Suspense, {\n    fallback: React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Hoepage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/signinsignup\",\n    exact: true,\n    render: () => {\n      if (currentUser) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(SignInAndSignUp, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/iandahlberg/Documents/code/react learn/crwn-clothing/client/src/App.js"],"names":["React","useEffect","lazy","Suspense","Route","Switch","Redirect","connect","createStructuredSelector","selectCurrentUser","checkUserSession","Header","GlobalStyle","Spinner","ErrorBoundary","Homepage","ShopPage","CheckoutPage","SignInAndSignUp","App","currentUser","Hoepage","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, lazy, Suspense } from 'react';\nimport { Route, Switch, Redirect } from \"react-router-dom\"\n// redirect to prevent signed in user from the sign in page\n\nimport { connect } from 'react-redux'\n\n// ===================== Reselect =====================\nimport { createStructuredSelector } from 'reselect'\nimport { selectCurrentUser } from './redux/user/user.selectors'\nimport { checkUserSession } from './redux/user/user.actions'\n\nimport Header from './components/header/header.component'\n\nimport { GlobalStyle } from './global.styles'\n\nimport Spinner from './components/spinner/spinner.component'\nimport ErrorBoundary from './components/error-boundary/error-boundary.component'\n\nconst Homepage = lazy(() => import('./pages/homepage/homepage.component'))\nconst ShopPage = lazy(() => import('./pages/shop/shop.component'))\nconst CheckoutPage = lazy(() => import('./pages/checkout/checkout.component'))\nconst SignInAndSignUp = lazy(() => import('./pages/sign-in-sign-up/sign-in-sign-up.component'))\n\nconst App = ({ checkUserSession, currentUser }) => {\n\n\tuseEffect(()=>{\n\t\tcheckUserSession();\n\t}, [checkUserSession]) //only invoke useEffect if checkUserSession changes, which it won't - this just mimics componentDidMount, a dummy property, just to satisfy the empty array \n\treturn (\n\t\t<div>\n\t\t\t<GlobalStyle />\n\t\t\t<Header />\n\t\t\t<Switch>\n\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t<Suspense fallback={<Spinner />}>\n\t\t\t\t\t\t<Route path=\"/\" exact component={Hoepage} />\n\t\t\t\t\t\t<Route path=\"/shop\" component={ShopPage} />\n\t\t\t\t\t\t<Route exact path=\"/checkout\" component={CheckoutPage} />\n\n\t\t\t\t\t<Route path=\"/signinsignup\" exact render={()=>{\n\t\t\t\t\t\tif(currentUser){\n\t\t\t\t\t\t\treturn <Redirect to=\"/\"/>\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn <SignInAndSignUp/>\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t} />\n\t\t\t\t\t</Suspense>\n\t\t\t\t</ErrorBoundary>\n\t\t\t</Switch>\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = createStructuredSelector({\n\tcurrentUser: selectCurrentUser,\n})\n\nconst mapDispatchToProps = dispatch => ({\n\tcheckUserSession: () => dispatch(checkUserSession())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}