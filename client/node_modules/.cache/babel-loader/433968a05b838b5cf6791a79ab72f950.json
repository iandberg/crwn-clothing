{"ast":null,"code":"var _jsxFileName = \"/Users/iandahlberg/Documents/code/react learn/crwn-clothing/src/App.js\";\nimport React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport Homepage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport SignInAndSignUp from \"./pages/sign-in-sign-up/sign-in-sign-up.component\";\nimport Header from \"./components/header/header.component\"; // handle confirmation of google signin, at the top app level\n\nimport { auth, createUserProfileDocument } from \"./firebase/firebase.utils\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFromAuth = null;\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  componentDidMount() {\n    //firebase stores logged in user - when user changes, we add to state - persists across session\n    //firebase.google keeps track\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(user => {\n      //open subscription, connection is open always checking in with firebase backend\n      //but we need to clean up on unmount\n      // this.setState({currentUser: user})\n      createUserProfileDocument(user);\n    }); // returns a function that can unsubscribe\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Header, {\n      currentUser: this.state.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Homepage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signinsignup\",\n      component: SignInAndSignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/iandahlberg/Documents/code/react learn/crwn-clothing/src/App.js"],"names":["React","Route","Switch","Homepage","ShopPage","SignInAndSignUp","Header","auth","createUserProfileDocument","App","Component","constructor","unsubscribeFromAuth","state","currentUser","componentDidMount","onAuthStateChanged","user","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AAEA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AACA,OAAOC,MAAP,MAAmB,sCAAnB,C,CACA;;AACA,SAAQC,IAAR,EAAcC,yBAAd,QAA8C,2BAA9C;;AAGA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAEjCC,EAAAA,WAAW,GAAE;AACZ;AADY,SAQbC,mBARa,GAQS,IART;AAGZ,SAAKC,KAAL,GAAa;AACZC,MAAAA,WAAW,EAAE;AADD,KAAb;AAGA;;AAIDC,EAAAA,iBAAiB,GAAE;AAClB;AACA;AACA,SAAKH,mBAAL,GAA2BL,IAAI,CAACS,kBAAL,CAAwBC,IAAI,IAAI;AAC1D;AACA;AACA;AAEAT,MAAAA,yBAAyB,CAACS,IAAD,CAAzB;AACA,KAN0B,CAA3B,CAHkB,CAUlB;AAEA;;AAEDC,EAAAA,oBAAoB,GAAE;AACrB,SAAKN,mBAAL;AACA;;AAEDO,EAAAA,MAAM,GAAE;AACP,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKN,KAAL,CAAWC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEX,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,eAAZ;AAA4B,MAAA,SAAS,EAAEC,eAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CAFD,CADD;AAWA;;AA1CgC;;AA6ClC,eAAeI,GAAf","sourcesContent":["import React from 'react';\nimport { Route, Switch } from \"react-router-dom\"\n\nimport './App.css';\n\nimport Homepage from \"./pages/homepage/homepage.component\"\nimport ShopPage from \"./pages/shop/shop.component\"\nimport SignInAndSignUp from \"./pages/sign-in-sign-up/sign-in-sign-up.component\"\nimport Header from \"./components/header/header.component\"\n// handle confirmation of google signin, at the top app level\nimport {auth, createUserProfileDocument} from \"./firebase/firebase.utils\"\n\n\nclass App extends React.Component {\n\n\tconstructor(){\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\tcurrentUser: null\n\t\t}\n\t}\n\n\tunsubscribeFromAuth = null\n\n\tcomponentDidMount(){\n\t\t//firebase stores logged in user - when user changes, we add to state - persists across session\n\t\t//firebase.google keeps track\n\t\tthis.unsubscribeFromAuth = auth.onAuthStateChanged(user => {\n\t\t\t//open subscription, connection is open always checking in with firebase backend\n\t\t\t//but we need to clean up on unmount\n\t\t\t// this.setState({currentUser: user})\n\n\t\t\tcreateUserProfileDocument(user);\n\t\t});\n\t\t// returns a function that can unsubscribe\n\n\t}\n\n\tcomponentWillUnmount(){\n\t\tthis.unsubscribeFromAuth()\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header currentUser={this.state.currentUser} />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Homepage} />\n\t\t\t\t\t<Route path=\"/shop\" component={ShopPage} />\n\t\t\t\t\t<Route path=\"/signinsignup\" component={SignInAndSignUp} />\n\t\t\t\t</Switch>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}