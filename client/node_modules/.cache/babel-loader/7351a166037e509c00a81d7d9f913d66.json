{"ast":null,"code":"var _jsxFileName = \"/Users/iandahlberg/Documents/code/react learn/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions'; // pages/components\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.container'; // =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n\nconst ShopPage = ({\n  fetchCollectionsStart,\n  match\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]); //only fetch collections if on load or if fetchCollectionsStart changes (which it, of course, won't)\n\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"\".concat(match.path),\n    component: CollectionsOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"\".concat(match.path, \"/:collectionId\"),\n    component: CollectionPageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/iandahlberg/Documents/code/react learn/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","fetchCollectionsStart","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,+BAAtC,C,CAEA;;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC,C,CAEA;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEH,EAAAA,qBAAF;AAAyBI,EAAAA;AAAzB,CAAD,KAAsC;AAEtDP,EAAAA,SAAS,CAAC,MAAI;AACbG,IAAAA,qBAAqB;AACrB,GAFQ,EAEN,CAAEA,qBAAF,CAFM,CAAT,CAFsD,CAIxB;;AAE9B,SACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AACC,IAAA,KAAK,MADN;AAEC,IAAA,IAAI,YAAKI,KAAK,CAACC,IAAX,CAFL;AAGC,IAAA,SAAS,EAAEJ,4BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAOC,oBAAC,KAAD;AACC,IAAA,IAAI,YAAKG,KAAK,CAACC,IAAX,mBADL;AAEC,IAAA,SAAS,EAAEH,uBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,CADD;AAgBA,CAtBD;;AAwBA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACvCP,EAAAA,qBAAqB,EAAE,MAAMO,QAAQ,CAACP,qBAAqB,EAAtB;AADE,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CACrB,IADqB,EAErBO,kBAFqB,CAAP,CAGbH,QAHa,CAAf","sourcesContent":["import React, { useEffect } from \"react\"\nimport { Route } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions'\n\n// pages/components\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container'\nimport CollectionPageContainer from '../collection/collection.container'\n\n// =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n\nconst ShopPage = ({ fetchCollectionsStart, match }) => {\n\n\tuseEffect(()=>{\n\t\tfetchCollectionsStart()\n\t}, [ fetchCollectionsStart ]) //only fetch collections if on load or if fetchCollectionsStart changes (which it, of course, won't)\n\n\treturn(\n\t\t<div className=\"shop-page\">\n\t\t\t<Route \n\t\t\t\texact \n\t\t\t\tpath={`${match.path}`} \n\t\t\t\tcomponent={CollectionsOverviewContainer} \n\t\t\t/>\n\n\t\t\t<Route \n\t\t\t\tpath={`${match.path}/:collectionId`} \n\t\t\t\tcomponent={CollectionPageContainer} \n\t\t\t/>\n\n\t\t</div>\n\t)\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tfetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n})\n\nexport default connect(\n\tnull, \n\tmapDispatchToProps\n)(ShopPage)\n"]},"metadata":{},"sourceType":"module"}