{"ast":null,"code":"var _jsxFileName = \"/Users/iandahlberg/Documents/code/react learn/crwn-clothing/src/App.js\";\nimport React, { useEffect } from 'react';\nimport { Route, Switch, Redirect } from \"react-router-dom\"; // redirect to prevent signed in user from the sign in page\n\nimport { connect } from 'react-redux'; // ===================== Reselect =====================\n\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { checkUserSession } from './redux/user/user.actions';\nimport './App.css';\nimport Homepage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUp from './pages/sign-in-sign-up/sign-in-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport Header from './components/header/header.component';\n\nconst App = ({\n  checkUserSession,\n  currentUser\n}) => {\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]); //only invoke useEffect if checkUserSession changes, which it won't - this just mimics componentDidMount, a dummy property, just to satisfy the empty array \n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Homepage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/signinsignup\",\n    exact: true,\n    render: () => {\n      if (currentUser) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(SignInAndSignUp, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/iandahlberg/Documents/code/react learn/crwn-clothing/src/App.js"],"names":["React","useEffect","Route","Switch","Redirect","connect","createStructuredSelector","selectCurrentUser","checkUserSession","Homepage","ShopPage","SignInAndSignUp","CheckoutPage","Header","App","currentUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC,C,CACA;;AAEA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AAEA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AAEA,OAAOC,MAAP,MAAmB,sCAAnB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEN,EAAAA,gBAAF;AAAoBO,EAAAA;AAApB,CAAD,KAAuC;AAElDd,EAAAA,SAAS,CAAC,MAAI;AACbO,IAAAA,gBAAgB;AAChB,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT,CAFkD,CAI3B;;AAEvB,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,MAArB;AAAsB,IAAA,SAAS,EAAEC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,SAAS,EAAEE,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,EAIC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,eAAZ;AAA4B,IAAA,KAAK,MAAjC;AAAkC,IAAA,MAAM,EAAE,MAAI;AAC7C,UAAGG,WAAH,EAAe;AACd,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,OAFD,MAEK;AACJ,eAAO,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;AACD,KAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,CAFD,CADD;AAmBA,CAzBD;;AA2BA,MAAMC,eAAe,GAAGV,wBAAwB,CAAC;AAChDS,EAAAA,WAAW,EAAER;AADmC,CAAD,CAAhD;;AAIA,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACvCV,EAAAA,gBAAgB,EAAE,MAAMU,QAAQ,CAACV,gBAAgB,EAAjB;AADO,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAACW,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CH,GAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Route, Switch, Redirect } from \"react-router-dom\"\n// redirect to prevent signed in user from the sign in page\n\nimport { connect } from 'react-redux'\n\n// ===================== Reselect =====================\nimport { createStructuredSelector } from 'reselect'\nimport { selectCurrentUser } from './redux/user/user.selectors'\nimport { checkUserSession } from './redux/user/user.actions'\n\nimport './App.css';\n\nimport Homepage from './pages/homepage/homepage.component'\nimport ShopPage from './pages/shop/shop.component'\nimport SignInAndSignUp from './pages/sign-in-sign-up/sign-in-sign-up.component'\nimport CheckoutPage from './pages/checkout/checkout.component'\n\nimport Header from './components/header/header.component'\n\nconst App = ({ checkUserSession, currentUser }) => {\n\n\tuseEffect(()=>{\n\t\tcheckUserSession();\n\t}, [checkUserSession]) //only invoke useEffect if checkUserSession changes, which it won't - this just mimics componentDidMount, a dummy property, just to satisfy the empty array \n\n\treturn (\n\t\t<div>\n\t\t\t<Header />\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact component={Homepage} />\n\t\t\t\t<Route path=\"/shop\" component={ShopPage} />\n\t\t\t\t<Route exact path=\"/checkout\" component={CheckoutPage} />\n\t\t\t\t<Route path=\"/signinsignup\" exact render={()=>{\n\t\t\t\t\tif(currentUser){\n\t\t\t\t\t\treturn <Redirect to=\"/\"/>\n\t\t\t\t\t}else{\n\t\t\t\t\t\treturn <SignInAndSignUp/>\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t} />\n\t\t\t\t\t</Switch>\n\n\t\t\t\t</div>\n\t);\n}\n\nconst mapStateToProps = createStructuredSelector({\n\tcurrentUser: selectCurrentUser,\n})\n\nconst mapDispatchToProps = dispatch => ({\n\tcheckUserSession: () => dispatch(checkUserSession())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}