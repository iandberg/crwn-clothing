{"ast":null,"code":"var _jsxFileName = \"/Users/iandahlberg/Documents/code/react learn/crwn-clothing/client/src/components/error-boundary/error-boundary.component.jsx\";\nimport React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      hasErrored: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    //catches errors thrown by any child components\n    return {\n      hasErrored: true // return new state from method\n\n    };\n  }\n\n  componentDidCatch(error, info) {\n    // log info\n    console.log(error);\n  }\n\n  render() {\n    if (this.state.hasErrored) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \" Something went wrong \");\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["/Users/iandahlberg/Documents/code/react learn/crwn-clothing/client/src/components/error-boundary/error-boundary.component.jsx"],"names":["React","ErrorBoundary","Component","constructor","state","hasErrored","getDerivedStateFromError","error","componentDidCatch","info","console","log","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAE3CC,EAAAA,WAAW,GAAE;AACZ;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,UAAU,EAAE;AADA,KAAb;AAGA;;AAED,SAAOC,wBAAP,CAAgCC,KAAhC,EAAsC;AAAE;AACvC,WAAO;AAAEF,MAAAA,UAAU,EAAE,IAAd,CAAqB;;AAArB,KAAP;AACA;;AAEDG,EAAAA,iBAAiB,CAACD,KAAD,EAAQE,IAAR,EAAc;AAC9B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA;;AAEDK,EAAAA,MAAM,GAAG;AAER,QAAG,KAAKR,KAAL,CAAWC,UAAd,EAAyB;AACxB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAP;AACA;;AAED,WAAO,KAAKQ,KAAL,CAAWC,QAAlB;AACA;;AA1B0C;;AA8B5C,eAAeb,aAAf","sourcesContent":["import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n\n\tconstructor(){\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\thasErrored: false\n\t\t}\n\t}\n\n\tstatic getDerivedStateFromError(error){ //catches errors thrown by any child components\n\t\treturn { hasErrored: true } // return new state from method\n\t}\n\n\tcomponentDidCatch(error, info) {\n\t\t// log info\n\t\tconsole.log(error);\n\t}\n\n\trender() {\n\n\t\tif(this.state.hasErrored){\n\t\t\treturn <div> Something went wrong </div>\n\t\t}\n\n\t\treturn this.props.children\n\t}\n\n}\n\nexport default ErrorBoundary\n"]},"metadata":{},"sourceType":"module"}