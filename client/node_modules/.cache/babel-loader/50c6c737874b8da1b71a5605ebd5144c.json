{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const userRef = yield auth.signInWithPopup(googleProvider);\n    console.log(userRef);\n  } catch (error) {}\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n} // we 'bundle' our sagas into one export, to run concurrently\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/Users/iandahlberg/Documents/code/react learn/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInWithGoogle","userRef","signInWithPopup","console","log","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAClC,MAAG;AACF,UAAMC,OAAO,GAAG,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAtB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,GAHD,CAGC,OAAMI,KAAN,EAAY,CAEZ;AACD;AAED,OAAO,UAAUC,mBAAV,GAA+B;AACrC,QAAMd,UAAU,CAACI,eAAe,CAACW,oBAAjB,EAAuCP,gBAAvC,CAAhB;AACA,C,CAED;;AACA,OAAO,UAAUQ,SAAV,GAAqB;AAC3B,QAAMd,GAAG,CAAC,CAACC,IAAI,CAACW,mBAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\n\nimport UserActionTypes from './user.types'\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils'\n\nexport function* signInWithGoogle(){\n\ttry{\n\t\tconst userRef = yield auth.signInWithPopup(googleProvider)\n\t\tconsole.log(userRef);\n\t}catch(error){\n\n\t}\n}\n\nexport function* onGoogleSignInStart(){\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\n// we 'bundle' our sagas into one export, to run concurrently\nexport function* userSagas(){\n\tyield all([call(onGoogleSignInStart)])\n}\n"]},"metadata":{},"sourceType":"module"}