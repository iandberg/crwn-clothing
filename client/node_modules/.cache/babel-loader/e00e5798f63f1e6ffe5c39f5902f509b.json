{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, //it listens for this action, then..-> \n  fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/iandahlberg/Documents/code/react learn/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","catch","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SACCC,uBADD,EAECC,uBAFD,QAGO,gBAHP;AAMA,OAAO,UAAUC,qBAAV,GAAiC;AACvC,QAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AAEAD,EAAAA,aAAa,CACXE,GADF,GAEEC,IAFF,CAEOC,QAAQ,IAAG;AAChB,UAAMC,cAAc,GAAGT,+BAA+B,CAACQ,QAAD,CAAtD;AACAE,IAAAA,QAAQ,CAACT,uBAAuB,CAACQ,cAAD,CAAxB,CAAR;AACA,GALF,EAMEE,KANF,CAMQC,KAAK,IAAIF,QAAQ,CAACR,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CANzB;AAOA;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACvC,QAAMjB,SAAS,CACdC,eAAe,CAACiB,uBADF,EAC0B;AACxCZ,EAAAA,qBAFc,CAAf;AAIA","sourcesContent":["import { takeEvery } from 'redux-saga/effects'\nimport ShopActionTypes from './shop.types'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nimport {\n\tfetchCollectionsSuccess,\n\tfetchCollectionsFailure\n} from './shop.actions'\n\n\nexport function* fetchCollectionsAsync(){\n\tconst collectionRef = firestore.collection('collections')\n\n\tcollectionRef\n\t\t.get()\n\t\t.then(snapshot =>{\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n\t\t\tdispatch(fetchCollectionsSuccess(collectionsMap))\n\t\t})\n\t\t.catch(error => dispatch(fetchCollectionsFailure(error.message)))\n}\n\nexport function* fetchCollectionsStart(){\n\tyield takeEvery(\n\t\tShopActionTypes.FETCH_COLLECTIONS_START,//it listens for this action, then..-> \n\t\tfetchCollectionsAsync\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}