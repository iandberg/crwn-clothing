{"ast":null,"code":"import _defineProperty from \"/Users/iandahlberg/Documents/code/react learn/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/iandahlberg/Documents/code/react learn/crwn-clothing/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/iandahlberg/Documents/code/react learn/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = signUpStart => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const signUpStart = this.props.signUpStart;\n    const _this$state = this.state,\n          displayName = _this$state.displayName,\n          email = _this$state.email,\n          password = _this$state.password,\n          confirmPassword = _this$state.confirmPassword;\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const _this$state2 = this.state,\n        displayName = _this$state2.displayName,\n        email = _this$state2.email,\n        password = _this$state2.password,\n        confirmPassword = _this$state2.confirmPassword;\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: this.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: this.handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: this.handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: this.handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: this.handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Sign Up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/iandahlberg/Documents/code/react learn/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","handleChange","event","target","name","value","handleSubmit","preventDefault","props","state","alert","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\n\nimport { signUpStart } from '../../redux/user/user.actions'\n\nimport './sign-up.styles.scss'\n\nconst SignUp = ( signUpStart ) => {\n\n\tconst [ userCredentials, setUserCredentials ] = useState({\n\t\t\tdisplayName : '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tconfirmPassword: '',\n\t\t}\n\t)\n\n\tconst handleChange = (event)=>{\n\t\tconst {name, value} = event.target\n\n\t\tsetUserCredentials({ ...userCredentials, [name] : value })\n\t}\n\n\n\tconst handleSubmit = async event => {\n\n\t\tevent.preventDefault()\n\n\t\tconst { signUpStart } = this.props\n\t\tconst {displayName, email, password, confirmPassword} = this.state\n\n\t\tif(password !== confirmPassword){\n\t\t\talert(\"passwords don't match\")\n\t\t\treturn\n\t\t}\n\n\t\tsignUpStart({displayName, email, password})\n\t}\n\n\n\t\tconst { displayName, email, password, confirmPassword } = this.state\n\n\t\treturn(\n\t\t\t<div className=\"sign-up\">\n\t\t\t\t\t<h2 className=\"title\">I do not have an account</h2>\n\t\t\t\t\t\t<span>Sign up with your email and password</span>\n\n\t\t\t\t\t\t<form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\n\n\t\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tname='displayName'\n\t\t\t\t\t\t\t\tvalue={displayName} \n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tlabel='Display Name'\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\tvalue={email} \n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\tvalue={password} \n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tname='confirmPassword'\n\t\t\t\t\t\t\t\tvalue={confirmPassword} \n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tlabel='Confirm Password'\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<CustomButton>Sign Up</CustomButton>\n\t\t\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tsignUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp)\n"]},"metadata":{},"sourceType":"module"}